{"version":3,"sources":["components/Clock/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","clearInterval","this","props","id","time","React","Component","App","state","timerId","undefined","currentTime","Date","toLocaleTimeString","isClockVisible","startClockTimer","setInterval","console","log","setState","className","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"sNAQaA,EAAb,0KAEE,WACEC,cAAcC,KAAKC,MAAMC,MAH7B,oBAME,WACE,IAAQC,EAASH,KAAKC,MAAdE,KAER,OACE,8CAEG,IACAA,SAbT,GAA2BC,IAAMC,WCJ3BC,E,4MACJC,MAAQ,CACNC,aAASC,EACTC,aAAa,IAAIC,MAAOC,qBACxBC,gBAAgB,G,EAalBC,gBAAkB,WAChB,IAAMZ,EAAKa,aAAY,WACrB,IAAMZ,GAAO,IAAIQ,MAAOC,qBAGxBI,QAAQC,IAAId,GAEZ,EAAKe,SAAS,CACZV,QAASN,EACTQ,YAAaP,MAEd,M,uDArBL,WACEH,KAAKc,oB,gCAGP,WACMd,KAAKO,MAAMM,iBAAmBb,KAAKO,MAAMC,SAC3CR,KAAKc,oB,oBAkBT,WAA2B,IAAD,OAEtBJ,EACEV,KAAKO,MADPG,YAGF,OACE,sBAAKS,UAAU,MAAf,UACE,6CAECnB,KAAKO,MAAMM,gBAEV,cAAC,EAAD,CACEV,KAAMO,EACNR,GAAIF,KAAKO,MAAMC,UAInB,sBAAKW,UAAU,eAAf,UACE,wBACEC,KAAK,SACLC,QAAS,kBAAM,EAAKH,SAAS,CAAEL,gBAAgB,KAC/CM,UAAU,kBAHZ,wBAQA,wBACEC,KAAK,SACLC,QAAS,kBAAM,EAAKH,SAAS,CAC3BL,gBAAgB,EAChBL,aAASC,KAJb,kC,GAzDQL,IAAMC,WAyETC,IC1EfgB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.51723c95.chunk.js","sourcesContent":["import React from 'react';\n\ninterface Props {\n  time: string,\n  id?: number\n}\n\n// eslint-disable-next-line\nexport class Clock extends React.Component<Props> {\n\n  componentWillUnmount() {\n    clearInterval(this.props.id);\n  }\n\n  render() {\n    const { time } = this.props;\n\n    return (\n      <p>\n        Current time:\n        {' '}\n        {time}\n      </p>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './components/Clock';\n\nclass App extends React.Component {\n  state = {\n    timerId: undefined,\n    currentTime: new Date().toLocaleTimeString(),\n    isClockVisible: true,\n  };\n\n  componentDidMount() {\n    this.startClockTimer();\n  }\n\n  componentDidUpdate() {\n    if (this.state.isClockVisible && !this.state.timerId) {\n      this.startClockTimer();\n    }\n  }\n\n  startClockTimer = () => {\n    const id = setInterval(() => {\n      const time = new Date().toLocaleTimeString();\n\n      // eslint-disable-next-line\n      console.log(time);\n\n      this.setState({\n        timerId: id,\n        currentTime: time,\n      });\n    }, 1000);\n  };\n\n  render(): React.ReactNode {\n    const {\n      currentTime,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        {this.state.isClockVisible\n        && (\n          <Clock\n            time={currentTime}\n            id={this.state.timerId}\n          />\n        )}\n\n        <div className=\"App__buttons\">\n          <button\n            type=\"button\"\n            onClick={() => this.setState({ isClockVisible: true })}\n            className=\"App__show-clock\"\n          >\n            Show Clock\n          </button>\n\n          <button\n            type=\"button\"\n            onClick={() => this.setState({\n              isClockVisible: false,\n              timerId: undefined,\n            })}\n          >\n            Hide Clock\n          </button>\n        </div>\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}
{"version":3,"sources":["components/Clock/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","console","log","clearInterval","this","props","id","time","React","Component","App","state","timerId","undefined","currentTime","Date","toLocaleTimeString","isClockVisible","setInterval","setState","className","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"sNAQaA,EAAb,0KAEE,WAEEC,QAAQC,IAAI,kDACZC,cAAcC,KAAKC,MAAMC,MAL7B,oBAQE,WACE,IAAQC,EAASH,KAAKC,MAAdE,KAER,OACE,8CAEG,IACAA,SAfT,GAA2BC,IAAMC,WCJ3BC,E,4MACJC,MAAQ,CACNC,aAASC,EACTC,aAAa,IAAIC,MAAOC,qBACxBC,gBAAgB,G,uDAGlB,WAAqB,IAAD,OACZX,EAAKY,aAAY,WACrB,IAAMX,GAAO,IAAIQ,MAAOC,qBAGxBf,QAAQC,IAAIK,GAEZ,EAAKY,SAAS,CACZP,QAASN,EACTQ,YAAaP,MAEd,O,gCAGL,WAAsB,IAAD,OACnB,GAAIH,KAAKO,MAAMM,iBAAmBb,KAAKO,MAAMC,QAC3C,IAAMN,EAAKY,aAAY,WACrB,IAAMX,GAAO,IAAIQ,MAAOC,qBAGxBf,QAAQC,IAAIK,GAEZ,EAAKY,SAAS,CACZP,QAASN,EACTQ,YAAaP,MAEd,O,oBAIP,WAA2B,IAAD,OAEtBO,EACEV,KAAKO,MADPG,YAGF,OACE,sBAAKM,UAAU,MAAf,UACE,6CAEChB,KAAKO,MAAMM,gBAEV,cAAC,EAAD,CACEV,KAAMO,EACNR,GAAIF,KAAKO,MAAMC,UAInB,sBAAKQ,UAAU,cAAf,UACE,wBACEC,KAAK,SACLC,QAAS,kBAAM,EAAKH,SAAS,CAAEF,gBAAgB,KAC/CG,UAAU,0BAHZ,wBAQA,wBACEC,KAAK,SACLC,QAAS,kBAAM,EAAKH,SAAS,CAC3BF,gBAAgB,EAChBL,aAASC,KAJb,kC,GA/DQL,IAAMC,WA+ETC,IChFfa,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.d7e05d7c.chunk.js","sourcesContent":["import React from 'react';\n\ninterface Props {\n  time: string,\n  id?: number\n}\n\n// eslint-disable-next-line\nexport class Clock extends React.Component<Props> {\n\n  componentWillUnmount() {\n    // eslint-disable-next-line\n    console.log('clock\\'ve been stoped by componentWillUnmount()');\n    clearInterval(this.props.id);\n  }\n\n  render() {\n    const { time } = this.props;\n\n    return (\n      <p>\n        Current time:\n        {' '}\n        {time}\n      </p>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './components/Clock';\n\nclass App extends React.Component {\n  state = {\n    timerId: undefined,\n    currentTime: new Date().toLocaleTimeString(),\n    isClockVisible: true,\n  };\n\n  componentDidMount() {\n    const id = setInterval(() => {\n      const time = new Date().toLocaleTimeString();\n\n      // eslint-disable-next-line\n      console.log(time);\n\n      this.setState({\n        timerId: id,\n        currentTime: time,\n      });\n    }, 1000);\n  }\n\n  componentDidUpdate() {\n    if (this.state.isClockVisible && !this.state.timerId) {\n      const id = setInterval(() => {\n        const time = new Date().toLocaleTimeString();\n\n        // eslint-disable-next-line\n        console.log(time);\n\n        this.setState({\n          timerId: id,\n          currentTime: time,\n        });\n      }, 1000);\n    }\n  }\n\n  render(): React.ReactNode {\n    const {\n      currentTime,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        {this.state.isClockVisible\n        && (\n          <Clock\n            time={currentTime}\n            id={this.state.timerId}\n          />\n        )}\n\n        <div className=\"app-buttons\">\n          <button\n            type=\"button\"\n            onClick={() => this.setState({ isClockVisible: true })}\n            className=\"app-buttons__show-clock\"\n          >\n            Show Clock\n          </button>\n\n          <button\n            type=\"button\"\n            onClick={() => this.setState({\n              isClockVisible: false,\n              timerId: undefined,\n            })}\n          >\n            Hide Clock\n          </button>\n        </div>\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}